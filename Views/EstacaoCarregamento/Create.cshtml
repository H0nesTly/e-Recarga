@model e_Recarga.Models.EstacaoCarregamento

@{
    ViewBag.Title = "Create";
}

<div class="container top-pad">
    <h2>@ViewBag.Title.</h2>
    <div class="row">
        <div class="col">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <h4>EstacaoCarregamento</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-row">
                        @Html.LabelFor(model => model.Designacao, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4 mb-3">
                            @Html.EditorFor(model => model.Designacao, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Designacao, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-row">
                        @Html.LabelFor(model => model.Latitude, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4 mb-3">
                            @Html.EditorFor(model => model.Latitude, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Latitude, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-row">
                        @Html.LabelFor(model => model.Longitude, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4 mb-3">
                            @Html.EditorFor(model => model.Longitude, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Longitude, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-row">
                        @Html.LabelFor(model => model.CodigoPostal, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4 mb-3">
                            @Html.EditorFor(model => model.CodigoPostal, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CodigoPostal, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-row">
                        @Html.LabelFor(model => model.Localidade, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4 mb-3">
                            @Html.EditorFor(model => model.Localidade, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Localidade, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-row">
                        @Html.LabelFor(model => model.ConcelhoID, "Concelho", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-3 mb-3">
                            @Html.DropDownList("ConcelhoID", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ConcelhoID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10 mb-3">
                            <input type="submit" value="Create" class="btn btn-outline-primary" />
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
    <div class="row">
        @Html.ActionLink("Back to List", "Index")
    </div>
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
